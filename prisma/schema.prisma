generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model tweetParent {
  id            Int            @id @default(autoincrement())
  tweet         String?        @db.VarChar(140)
  createdAt     DateTime       @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt     DateTime?      @updatedAt @map("updated_at")
  authorId      Int
  user          user           @relation(fields: [authorId], references: [id])
  tweet_child   tweetChild[]
  tweet_comment tweetComment[]
  tweet_photos  tweetPhoto[]

  @@index([authorId], name: "fk_tweet_parent_user")
  @@map("tweet_parents")
}

model tweetChild {
  id              Int         @id @default(autoincrement())
  tweet           String      @db.VarChar(140)
  id_tweet_parent Int
  tweet_parent    tweetParent @relation(fields: [id_tweet_parent], references: [id])

  @@index([id_tweet_parent], name: "fk_parent_child")
  @@map("tweet_childs")
}

model tweetPhoto {
  id              Int         @id @default(autoincrement())
  id_tweet_parent Int
  images          String?     @db.VarChar(255)
  description     String?     @db.VarChar(255)
  tweet_parent    tweetParent @relation(fields: [id_tweet_parent], references: [id])

  @@index([id_tweet_parent], name: "fk_tweet_parent")
  @@map("tweet_photos")
}

model tweetComment {
  id              Int         @id @default(autoincrement())
  id_tweet_parent Int
  content         String      @db.VarChar(500)
  createdAt       DateTime    @default(now()) @map("created_at") @db.Timestamp(6)
  authorId        Int
  user            user        @relation(fields: [authorId], references: [id])
  tweet_parent    tweetParent @relation(fields: [id_tweet_parent], references: [id])

  @@index([authorId], name: "fk_user_comment")
  @@index([id_tweet_parent], name: "id_tweet_parent")
  @@map("tweet_comments")
}

model gender {
  id            Int           @id @default(autoincrement())
  name          String
  user_settings userSetting[]

  @@map("genders")
}

model user {
  id               Int            @id @default(autoincrement())
  name             String         @db.VarChar(70)
  bio              String?        @db.VarChar(255)
  website          String?        @db.VarChar(255)
  created_at       DateTime       @default(now()) @db.Timestamp(6)
  avatar           String?        @db.VarChar(255)
  banner           String?        @db.VarChar(255)
  user_settings_id Int
  user_settings    userSetting    @relation(fields: [user_settings_id], references: [id])
  tweet_comment    tweetComment[]
  tweet_parent     tweetParent[]

  @@index([user_settings_id], name: "user_settings_id")
  @@map("users")
}

model userSetting {
  id         Int      @id @default(autoincrement())
  username   String   @unique @db.VarChar(50)
  email      String   @unique @db.VarChar(150)
  password   String   @db.VarChar(255)
  genders_id Int      @default(0)
  date_birth DateTime @default(now()) @db.Timestamp(6)
  genders    gender   @relation(fields: [genders_id], references: [id])
  user       user[]

  @@index([genders_id], name: "genders_id")
  @@map("user_settings")
}
